Logic:
-----
--Logic to handle placement - 1st, 2nd, 3rd
--Put cars in finish boxes after done racing
--Add countdown logic/timer before start of race
--Update computer logic of other cars to be +/- track points
--add checkpoint logic for user to pass to finish level (based on overlap and order of specific track section)
--add starting car locations and angles
--level selector
--car selector
--Refresh title screen
--tournament mode
Weapons on user car
Weapons on opponent car
Oil slick spots show up randomly
add speed boosts on the road
Add animation to title screen

Settings:
--------
--controls settings window and logic
difficulty setting?? -- slower on grass
number of laps
add pngs for control settings rather than just text

Status Bar:
----------
--status bar update of countdown
--status bar update of user placement
--status bar update of end of race
status bar update of current weapons
status bar update of speed??

Graphics:
--------
Oil slick
Open/close gate
Fire animation of exploding car
speed boost
slant tracks left/right/up/down (100 x 100)
split track
--Shrink vertical/horizontal track (2 horiz, 2 vert)
--Cross track (1)
--Squeeze track - done with shrink 2 shrink tracks
--checkpoint track
--slant tracks left/right/up/down (50 x 100 and 100 x 50) - accomplished via 90 degree existing curves



SVG sed scripts:

Road filter:
grep "g id" level0_svg.svg | sed s/" *<g id=\""/"  { RESOURCE_ID_"/ | sed s/"\" transform=\"translate("/", {"/ | sed s/"\.000000"// | sed s/"\.000000"// | sed s/"\"[>A-z0-9 =#\",:\.-]*"/" },"/ | sed y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/ | sed s/")"/"}?/ | sed s/?ROAD_NE, [{}, 0-9]*]
grep "g id" level1_svg.svg | sed s/" *<g id=\""/"  { RESOURCE_ID_"/ | sed s/"\" transform=\"translate("/", {"/ | sed s/"\.000000"// | sed s/"\.000000"// | sed s/"\"[>A-z0-9 =#\",:\.-]*"/" },"/ | sed y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/ | sed s/")"/"}?/ | sed s/?ROAD_NE, [{}, 0-9]*]
grep "g id" level2_svg.svg | sed s/" *<g id=\""/"  { RESOURCE_ID_"/ | sed s/"\" transform=\"translate("/", {"/ | sed s/"\.000000"// | sed s/"\.000000"// | sed s/"\"[>A-z0-9 =#\",:\.-]*"/" },"/ | sed y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/ | sed s/")"/"}?/ | sed s/?ROAD_NE, [{}, 0-9]*]

Sprite Filter:
grep "g id" level0_svg.svg | sed s/" *<g id=\""/"  { RESOURCE_ID_"/ | sed s/"\" transform=\"translate("/", {"/ | sed s/"\.000000"// | sed s/"\.000000"// | sed s/"\"[>A-z0-9 =#\",:\.-]*"/", NULL },"/ | sed y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/ | sed s/")"/"}"/ | sed s/"[{}, 0-9]*SCALE([-, 1]*) TRANSLATE([-,0-9 .]*) TRANSLATE("/", {"/ | sed s/"\.000000"// | sed s/"\.000000"// | sed s/")"/"}"/ > level0_sprites_raw.h
grep "g id" level1_svg.svg | sed s/" *<g id=\""/"  { RESOURCE_ID_"/ | sed s/"\" transform=\"translate("/", {"/ | sed s/"\.000000"// | sed s/"\.000000"// | sed s/"\"[>A-z0-9 =#\",:\.-]*"/", NULL },"/ | sed y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/ | sed s/")"/"}"/ | sed s/"[{}, 0-9]*SCALE([-, 1]*) TRANSLATE([-,0-9 .]*) TRANSLATE("/", {"/ | sed s/"\.000000"// | sed s/"\.000000"// | sed s/")"/"}"/ > level1_sprites_raw.h
grep "g id" level2_svg.svg | sed s/" *<g id=\""/"  { RESOURCE_ID_"/ | sed s/"\" transform=\"translate("/", {"/ | sed s/"\.000000"// | sed s/"\.000000"// | sed s/"\"[>A-z0-9 =#\",:\.-]*"/", NULL },"/ | sed y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/ | sed s/")"/"}"/ | sed s/"[{}, 0-9]*SCALE([-, 1]*) TRANSLATE([-,0-9 .]*) TRANSLATE("/", {"/ | sed s/"\.000000"// | sed s/"\.000000"// | sed s/")"/"}"/ > level2_sprites_raw.h

Track Points:
grep "rect id=\"track_point\"" level0_svg.svg |  sed s/" *<[A-z0F =#:\"]*x=\""/"  {"/ | sed s/"\" y=\""/", "/ | sed s/"\" width[A-z0-9=<>/ \"]*"/"},"/

Resource Filter
grep RESOURCE_ID level0_sprites.h | sed s/"{ RESOURCE_ID_"/"{  \"type\": \"png\",  \"name\": \""/ | sed s/", {[ ,0-9]*}, NULL }[,;]"/"\",\  \"file\": \"images\/\.png\" },"/ | sed s/"static LevelSpriteLocation level_grass ="/" "/ | sort | uniq

